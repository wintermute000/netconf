!!!!! EXAMPLE NETCONF

device = manager.connect(host=host, port=port, username=user, password=pwd,
                          hostkey_verify=False, device_params={'name': 'nexus'},
                          allow_agent=False, look_for_keys=False)
 get_filter = """
               <show>
               <hostname>
               </hostname>
               </show>
               """
 nc_get_reply = device.get(('subtree', get_filter))
 print nc_get_reply.xml 
 ns_map = {'mod': 'http://www.cisco.com/nxos:1.0:vdc_mgr'}
 xml_rsp = nc_get_reply.data_ele.find('.//mod:hostname', ns_map)
 value = xml_rsp.text
 print value
 
 device.close_session()
 
 !!!!! EXAMPLE NETCONF/YANG

 #!/usr/bin/env python

from lxml import etree
from ncclient import manager

if __name__ == "__main__":

    with manager.connect(host='csr1kv', port=830, username='cisco', password='cisco',
                         hostkey_verify=False, device_params={'name': 'csr'},
                         allow_agent=False, look_for_keys=False) as device:

        get_filter = """
            <native xmlns="http://cisco.com/ns/yang/ned/ios">
             <interface>
              <GigabitEthernet>
               <name>1</name>
              </GigabitEthernet>
             </interface>
            </native>
        """

        nc_get_reply = device.get(('subtree', get_filter))
        print etree.tostring(nc_get_reply.data_ele, pretty_print=True)
 
 !!!!!!!! EXAMPLE XML
 nxosv# show hostname | xmlin
<?xml version="1.0"?>
<nf:rpc xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns="http://www.cisco.com/nxos:7.3.1.D1.1.:vdc_mgr" message-id="1">
  <nf:get>
    <nf:filter type="subtree">
      <show>
        <hostname/>
      </show>
    </nf:filter>
  </nf:get>
</nf:rpc>
]]>]]>

nxosv# show hostname | xmlout
<?xml version="1.0" encoding="ISO-8859-1"?>
<nf:rpc-reply xmlns:nf="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns="http://www.cisco.com/nxos:7.3.1.D1.1.:vdc_mgr">
 <nf:data>
  <show>
   <hostname>
    <__readonly__>
     <hostname>nxosv</hostname>
    </__readonly__>
   </hostname>
  </show>
 </nf:data>
</nf:rpc-reply>
]]>]]>


!!!!!  Build filter as elementtree object
from lxml import etree 
from lxml.builder import ElementMaker

E = ElementMaker()
nc_filter = E.show(
    E.hostname()
)
print etree.tostring(nc_filter)  # view XML obj as string   

nc_get_reply = device.get(('subtree', nc_filter))

!!!!! Hello client reply
<?xml version="1.0"?>
<hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <capabilities>
        <capability>urn:ietf:params:netconf:base:1.0</capability>
</capabilities>
</hello>]]>]]>​​​​​​​



